<?xml version="1.0" encoding="utf-8"?>
<KFunction xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>populateConclusionTableWithResults</Name>
  <ID>JAVA.populateConclusionTableWithResults</ID>
  <Category>JAVA</Category>
  <FunctionLevel>Project</FunctionLevel>
  <FunctionType>RegularFunction</FunctionType>
  <RegisterAsLuDbFunction>false</RegisterAsLuDbFunction>
  <SaveToDLUR>false</SaveToDLUR>
  <ApiFunction>false</ApiFunction>
  <DecisionFunction>false</DecisionFunction>
  <RequiresLuReference>false</RequiresLuReference>
  <Desc />
  <Auther name="" id="" />
  <Language>Java</Language>
  <FunctionBody>Collection&lt;IoGroupInstance&gt; instances = ioGroup.getIoGroupInstances();
		
		String entityName = ioGroup.getName();
		String entityId = "";
		
		String key = "";
		String value = "";
		
		String cqlInsert = "cql insert into " + luName + "Conclusions.conclusions (instance_id, entity_name, entity_id, key, value) values (%s, '%s', %s, '%s', '%s')";
		
		for (IoGroupInstance ioGroupInstance : instances) {
			
			Collection&lt;IoFactType&gt; ioFactTypes = ioGroupInstance.getIoFactTypes();
			
			entityId = ioFactTypes.stream()
				.filter(factType -&gt; factType.getName().toUpperCase().equals(entityName.toUpperCase() + "ID"))
				.map(ioFactType -&gt; String.valueOf(ioFactType.getValue()))
				.findFirst().orElse(null);
			
			if (StringUtils.isBlank(instanceId)) {
				instanceId = ioFactTypes
						.stream()
						.filter(ioFactType -&gt; ioFactType.getName()
								.toUpperCase()
								.equals(rootTableName.toUpperCase() + "ID"))
						.map(ioFactType -&gt; String.valueOf(ioFactType.getValue()))
						.findFirst().orElse(null);
			}
			for (IoFactType ioFactType : ioFactTypes) {
				
				String factTypeName = ioFactType.getName();
				if (!factTypeName.toUpperCase().equals(entityName.toUpperCase() + "ID") &amp;&amp; 
						!factTypeName.toUpperCase().equals(rootTableName.toUpperCase() + "ID")){
				
					key = ioFactType.getName();
					Object tempValue = ioFactType.getValue();
					if (tempValue instanceof Collection) {
						value = "{" + String.join(",", (Collection) tempValue) + "}";
					} else {
						value = tempValue.toString();
					}
				}
			}
			
			DBExecute("fabric", String.format(cqlInsert, instanceId, entityName, entityId, key, value), null);
			Collection&lt;IoGroup&gt; ioGroups = ioGroupInstance.getIoGroups();
			for (IoGroup innerIoGroup : ioGroups) {
				populateConclusionTableWithResults(innerIoGroup, rootTableName, luName, instanceId);
			}
		}</FunctionBody>
  <IsSyntaxValid>true</IsSyntaxValid>
  <IsRootFunction>false</IsRootFunction>
  <InputParams>
    <Input name="ioGroup" id="fi.JAVA.populateConclusionTableWithResults.0" index="0" dataType="com.sapiens.bdes.engine.model.IoGroup">
      <Comment />
    </Input>
    <Input name="rootTableName" id="fi.JAVA.populateConclusionTableWithResults.1" index="1" dataType="String">
      <Comment />
    </Input>
    <Input name="luName" id="fi.JAVA.populateConclusionTableWithResults.2" index="2" dataType="String">
      <Comment />
    </Input>
    <Input name="instanceId" id="fi.JAVA.populateConclusionTableWithResults.3" index="3" dataType="String">
      <Comment />
    </Input>
  </InputParams>
  <OutputParams />
</KFunction>